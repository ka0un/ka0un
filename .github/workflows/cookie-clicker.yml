name: Cookie Clicker

on:
  issues:
    types: [opened]

jobs:
  update-leaderboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get install -y jq yq

      - name: Update leaderboard
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          DATA_FILE=data.yaml
          LEADERBOARD_FILE=README.md

          # Extract the username of the user who clicked
          USERNAME=$(jq -r '.issue.user.login' "$GITHUB_EVENT_PATH")
          ISSUE_NUMBER=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")

          # Check if the same user clicked twice in a row
          LAST_USER=$(grep "last_user" "$DATA_FILE" | awk '{print $2}')
          if [ "$USERNAME" == "$LAST_USER" ]; then
            echo "User $USERNAME clicked twice in a row. Ignoring click."
            exit 0
          fi

          # Update the clicks in the YAML file
          yq e ".users.\"$USERNAME\" += 1" -i "$DATA_FILE" || yq e ".users.\"$USERNAME\" = 1" -i "$DATA_FILE"

          # Get and sort users by clicks
          USERS=$(yq e '.users | to_entries | sort_by(.value) | reverse | .[] | "\(.key): \(.value)"' "$DATA_FILE")

          # Generate leaderboard markdown table
          LEADERBOARD="| Place | Profile Pic | Name | Score |\n|-------|-------------|------|-------|\n"
          PLACE=1
          for USER in $(echo "$USERS" | head -n 10); do
            NAME=$(echo "$USER" | awk -F': ' '{print $1}')
            SCORE=$(echo "$USER" | awk -F': ' '{print $2}')
            PROFILE_PIC="https://github.com/${NAME}.png?size=40" # Example URL
            LEADERBOARD+="| $PLACE | ![$NAME]($PROFILE_PIC) | $NAME | $SCORE |\n"
            PLACE=$((PLACE + 1))
          done

          # Update the README with the new leaderboard
          awk -v leaderboard="$LEADERBOARD" '
            /<!-- LEADERBOARD_START -->/ { print; print leaderboard; next }
            /<!-- LEADERBOARD_END -->/ { print; next }
            { print }
          ' "$LEADERBOARD_FILE" > temp.md && mv temp.md "$LEADERBOARD_FILE"

          # Update last user in data file
          yq e ".last_user = \"$USERNAME\"" -i "$DATA_FILE"

          # Commit the changes
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$DATA_FILE" "$LEADERBOARD_FILE"
          git commit -m "Update leaderboard for $USERNAME"

          # Push changes
          echo "Using PAT for git push"
          git push https://${{ secrets.ACTIONS_PAT }}@github.com/${{ github.repository }}.git HEAD:main

      - name: Delete the triggering issue
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          ISSUE_NUMBER=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")
          echo "Deleting issue #$ISSUE_NUMBER"
          curl -s -X DELETE -H "Authorization: token $ACTIONS_PAT" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER"

